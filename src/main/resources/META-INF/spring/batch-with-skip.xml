<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
<<<<<<< HEAD
	<import resource="infra/job-infra.xml" />
	<context:component-scan base-package="org.raman.springframwork.classic" />
	<context:component-scan base-package="org.raman.springframwork.skip" />
	<batch:job id="jobWithSkip">
		<batch:step id="stepWithSkip">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="customerFileReader" processor="customerItemProcessor"
					writer="jdbcWritter" commit-interval="5" skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="java.lang.Throwable" />
					</batch:skippable-exception-classes>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="skipListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="customerFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:batch/skip/customers.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper" ref="customerFieldSetMapper" />
				<property name="lineTokenizer" ref="customerLineTokenizer" />
			</bean>
		</property>
	</bean>
	<bean id="customerLineTokenizer"
=======
	<context:component-scan base-package="org.raman.springframwork.classic" />
	<batch:step id="jobWithSkip">
		<batch:tasklet transaction-manager="transactionManager">
			<batch:chunk reader="customerFileReader" processor="customerItemProcessor"
				writer="jdbcWritter" commit-interval="5" skip-limit="10">
				<batch:skippable-exception-classes>
					<batch:include class="java.lang.Throwable" />
				</batch:skippable-exception-classes>
			</batch:chunk>
			<batch:listeners>
				<batch:listener ref="skipListener" />
			</batch:listeners>
		</batch:tasklet>
	</batch:step>
	<bean id="customerFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="file:/temp/customers.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper" ref="customerFieldSetMapper" />
				<property name="lineTokenizer" ref="customerLineTokenizer" />
			</bean>
		</property>
	</bean>
	<bean id="customerLineTokenizer" 
>>>>>>> branch 'master' of https://github.com/haimra/spring-batch-cookbook
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="delimiter" value="," />
		<property name="names" value="id,firstName,lastName,cardNumber" />
	</bean>
	<bean id="jdbcWritter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="sql"
			value="INSERT INTO customer (id,first_name,last_name,card_number) VALUES(?,?,?,?)" />
		<property name="itemPreparedStatementSetter" ref="customerPreparedStatementSetter" />
		<property name="dataSource" ref="classicDataSource" />
	</bean>
	<bean id="classicDataSource"
		class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:classic" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="suppressClose" value="true" />
	</bean>
	<jdbc:initialize-database data-source="classicDataSource">
		<jdbc:script location="classpath:batch/classic/schema.sql" />
	</jdbc:initialize-database>


</beans>
