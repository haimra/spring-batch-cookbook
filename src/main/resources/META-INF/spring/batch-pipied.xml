<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<context:component-scan base-package="org.raman.springframwork.classic" />
	<batch:job id="rdr">
		<batch:step id="processCsv">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="reader" writer="writter"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="writter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:/tmp/rdr/b.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>
	<bean id="reader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="datasource" />
		<property name="sql"
			value="select id, name, description, price from product" />
		<property name="rowMapper" ref="productRowMapper" />
		<property name="maxRows" value="3000" />
		<property name="fetchSize" value="100" />
	</bean>
	<bean id=" rdrLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="delimiter" value="," />
		<property name="names" value="a,b,c,d" />
	</bean>

	<bean id="classicDataSource"
		class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:classic" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="suppressClose" value="true" />
	</bean>
	<jdbc:initialize-database data-source="classicDataSource">
		<jdbc:script location="classpath:batch/classic/schema.sql" />
	</jdbc:initialize-database>
</beans>
